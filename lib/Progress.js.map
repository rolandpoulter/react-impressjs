{"version":3,"sources":["../src/components/Progress.js"],"names":["Progress","props","progress","stepsData","activeStep","stepsTotal","color_gold","color_gray","ua","navigator","userAgent","toLowerCase","progressWidth","search","currentStepIndex","Object","keys","findIndex","s","id","percent","parseInt","position","bottom","width","display","fontSize","color","textAlign","opacity","paddingLeft","Component","propTypes","PropTypes","bool","object","shape","string","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;6BACV;AAAA,mBAC+C,KAAKC,KADpD;AAAA,UACAC,QADA,UACAA,QADA;AAAA,UACUC,SADV,UACUA,SADV;AAAA,UACqBC,UADrB,UACqBA,UADrB;AAAA,UACiCC,UADjC,UACiCA,UADjC;;AAEP,UAAMC,aAAa,SAAnB;AAAA,UACMC,aAAa,SADnB;AAEA,UAAMC,KAAKC,UAAUC,SAAV,CAAoBC,WAApB,EAAX;AACA,UAAMC,gBAAiBJ,GAAGK,MAAH,CAAU,2BAAV,MAA2C,CAAC,CAA7C,GAChB,GADgB,GAEhB,CAFN;AAGA,UAAIC,mBAAmBC,OAAOC,IAAP,CAAYb,SAAZ,EACOc,SADP,CACiB,UAACC,CAAD;AAAA,eAAOA,MAAMd,WAAWe,EAAxB;AAAA,OADjB,IAC+C,CADtE;AAEA,UAAIC,UAAUC,SAASP,mBAAmBT,UAAnB,GAAgC,GAAzC,EAA8C,EAA9C,CAAd;;AAEA,aACI;AAAA;AAAA,UAAK,OAAO;AACViB,sBAAU,OADA;AAEVC,oBAAQ,MAFE;AAGVC,mBAAO,MAHG;AAIVC,qBAASvB,WAAW,OAAX,GAAqB;AAJpB,WAAZ;AAME;AAAA;AAAA,YAAG,OAAO;AACRwB,wBAAU,EADF;AAERC,qBAAOpB,UAFC;AAGRqB,yBAAW,QAHH;AAIRC,uBAAS;AAJD,aAAV;AAMU;AAAA;AAAA;AACKf,4BADL;AAEE;AAAA;AAAA,gBAAM,OAAO,EAACgB,aAAa,CAAd,EAAiBJ,UAAU,EAA3B,EAAb;AAA8C,oBAC9CrB;AADA;AAFF;AANV,SANF;AAkBE,sCAAC,gBAAD,IAAM,SAASe,OAAf;AACM,yBAAc,QADpB;AAEM,uBAAaR,aAFnB,EAEkC,aAAaN,UAF/C;AAGM,sBAAYM,aAHlB,EAGiC,YAAYL,UAH7C;AAlBF,OADJ;AAyBD;;;;EAtCmCwB,gB;;kBAAjB/B,Q;;;AAyCrBA,SAASgC,SAAT,GAAqB;AACnB;;;AAGA9B,YAAU+B,oBAAUC,IAJD;;AAMnB;;;AAGA/B,aAAW8B,oBAAUE,MATF;;AAWnB;;;AAGA/B,cAAY6B,oBAAUG,KAAV,CAAgB;AAC1BjB,QAAIc,oBAAUI;AADY,GAAhB,CAdO;;AAkBnB;;;AAGAhC,cAAY4B,oBAAUK;AArBH,CAArB","file":"Progress.js","sourcesContent":["import React, {Component} from 'react';\nimport {Line}             from 'rc-progress';\nimport PropTypes          from 'prop-types';\n\nexport default class Progress extends Component {\n  render() {\n    const {progress, stepsData, activeStep, stepsTotal} = this.props;\n    const color_gold = '#e5b560',\n          color_gray = '#3e4852';\n    const ua = navigator.userAgent.toLowerCase();\n    const progressWidth = (ua.search(/(iphone)|(ipod)|(android)/) === -1)\n        ? 0.2\n        : 1;\n    let currentStepIndex = Object.keys(stepsData).\n                                  findIndex((s) => s === activeStep.id) + 1;\n    let percent = parseInt(currentStepIndex / stepsTotal * 100, 10);\n\n    return (\n        <div style={{\n          position: 'fixed',\n          bottom: '-3px',\n          width: '100%',\n          display: progress ? 'block' : 'none',\n        }}>\n          <p style={{\n            fontSize: 20,\n            color: color_gray,\n            textAlign: 'center',\n            opacity: .5,\n          }}>\n                    <span>\n                        {currentStepIndex}\n                      <span style={{paddingLeft: 1, fontSize: 13}}>{'/' +\n                      stepsTotal}</span>\n                    </span>\n          </p>\n          <Line percent={percent}\n                strokeLinecap='square'\n                strokeWidth={progressWidth} strokeColor={color_gold}\n                trailWidth={progressWidth} trailColor={color_gray}/>\n        </div>\n    );\n  }\n}\n\nProgress.propTypes = {\n  /**\n   * Progress of presentation\n   */\n  progress: PropTypes.bool,\n\n  /**\n   * Steps data\n   */\n  stepsData: PropTypes.object,\n\n  /**\n   * Object representing current step\n   */\n  activeStep: PropTypes.shape({\n    id: PropTypes.string,\n  }),\n\n  /**\n   * Amount of steps\n   */\n  stepsTotal: PropTypes.number,\n};\n"]}